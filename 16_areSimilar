https://app.codesignal.com/arcade/intro/level-4/xYXfzQmnhBvEKJwXP


Two arrays are called similar if one can be obtained from another by swapping at most one pair of elements in one of the arrays.

Given two arrays a and b, check whether they are similar.

Example

For a = [1, 2, 3] and b = [1, 2, 3], the output should be
areSimilar(a, b) = true.

The arrays are equal, no need to swap any elements.

For a = [1, 2, 3] and b = [2, 1, 3], the output should be
areSimilar(a, b) = true.

We can obtain b from a by swapping 2 and 1 in b.

For a = [1, 2, 2] and b = [2, 1, 1], the output should be
areSimilar(a, b) = false.

Any swap of any two elements either in a or in b won't make a and b equal.

/* Solution */
boolean areSimilar(int[] a, int[] b) {

    boolean token = false;
    int  j = 0;
    // compare two array elements
    for (int i = 0; i < a.length; i++){
        if (a[i] != b[i]){
            // Only one swap is allowed
            if (token == true)
                return false;
            token = true;
                        
            // Logically swap them. 
            // Any number of equal numbers is accepted once 
            // the first mismatch is found
            j = i+1;
            while (j < a.length && a[j] == b[j])
                ++j;
        
            // found the second mismatch, check the swapping
            if (a[i] != b[j] || a[j] != b[i])
                return false;
            i=j;
        }
    }
    return true;
}
